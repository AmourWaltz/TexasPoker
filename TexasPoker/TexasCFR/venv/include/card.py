import os# Defined colorsterm_black = ""term_red = ""term_def = ""# if a posix system like mac or linux print with colorsif os.name == 'posix':	term_black = "\033[107;30m"	term_red = "\033[107;91m"	term_def = "\033[0m"Suits = ["heart", "club", "diamond", "spade"]class Card:	"""	Contains a suit, number and various comparison functions	Rank : {2, 3, ..., 10, 11(J), 12(Q), 13(K), 14(A)}	Suit : Club(c), Diamond(d), Heart(h), Spade(s)	"""	# Takes two strings, a suit and a number and creates the card	# If either suit or number are ill-defined, the card will be undefined	def __init__(self, new_suit, new_number):		if 2 <= new_number <= 10 and isinstance(new_number, int):			self.number = str(new_number)			pass		elif new_number == 11:			self.number = "J"			pass		elif new_number == 12:			self.number = "Q"			pass		elif new_number == 13:			self.number = "K"			pass		elif new_number == 1:			self.number = "A"			pass		elif new_number == 0:			self.number = "unknown"			pass		else:			self.number = "undefined"			pass		pass		new_suit = new_suit.lower()		if new_suit == "heart" or new_suit == "club" or new_suit == "diamond" or new_suit == "spade":			self.suit = new_suit			pass		elif new_suit == "?":			self.suit = "unknown"			pass		else:			self.suit = "undefined"			pass		pass	def __str__(self):		s = ""		if self.suit == "heart":			s += term_black + "\u2663" + term_def  # Prints black on white symbol			pass		elif self.suit == "club":			s += term_red + "\u2666" + term_def  # Prints red on white symbol			pass		elif self.suit == "spade":			s += term_red + "â™¥" + term_def  # (: Prints red on white symbol			pass		else:			s += term_black + "\u2660" + term_def  # Prints black on white symbol			pass		pass		s += self.number		return s	__repr__ = __str__	def print_info(self):		print('Card Suit: ', self.suit)		print('Card Number: ', self.number)		pass	# Return true if the suit is not undefined. False if undefined.	def is_valid(self):		if self.suit != "undefined" and self.number != "undefined":			# Assert that it is not some other string (should never happen)			assert (					self.suit == "heart" or self.suit == "club" or self.suit == "diamond" or					self.suit == "spade" or self.suit == "unknown")			assert (					self.number == "2" or self.number == "3" or self.number == "4" or					self.number == "5" or self.number == "6" or self.number == "7" or					self.number == "8" or self.number == "9" or self.number == "10" or					self.number == "J" or self.number == "Q" or self.number == "K" or					self.number == "A" or self.number == "unknown")			return True		else:			return False		pass	# Return true if the two cards have the same suit	def is_match(self, card):		if not (card.is_valid() and self.is_valid()):			return False		elif card.suit == self.suit:			return True		else:			return False		pass	# Return true if the two cards have the same number	def is_pair(self, card):		if not (card.is_valid() and self.is_valid()):			return False		elif card.number == self.number:			return True		else:			return False		pass	# Return the rank of a card (J = 11, Q = 12, K = 13, A = 14)	# unknown and invalid cards are -1s	def get_rank(self):		if self.number == "1":			return 1		elif self.number == "2":			return 2		elif self.number == "3":			return 3		elif self.number == "4":			return 4		elif self.number == "5":			return 5		elif self.number == "6":			return 6		elif self.number == "7":			return 7		elif self.number == "8":			return 8		elif self.number == "9":			return 9		elif self.number == "10":			return 10		elif self.number == "J":			return 11		elif self.number == "Q":			return 12		elif self.number == "K":			return 13		elif self.number == "A":			return 14		else:			return -1		pass	# return true if the card isn't unknown or undefined	def is_known(self):		return self.is_valid() and self.suit != "unknown" and self.number != "unknown"